@model ResetPasswordModel

@{
    ViewData["Title"] = "Reset your Password";
    Layout = "_LayoutLoggedOff";
}

@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success" role="alert" xmlns="http://www.w3.org/1999/html">
    <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">x</button>
    @TempData["SuccessMessage"]
</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger" role="alert">
    <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">x</button>
    @TempData["ErrorMessage"]

</div>
}

<h2>Reset your Password</h2>
<div class="row d-flex justify-content-center">
    <div class="col-sm-4">
        <div>
        <form asp-action="SendResetPasswordLink" asp-controller="Password" method="post">
            <div class="text-center">
                <label class="form-label">Login</label>
                <input type="text" class="form-control text-center" asp-for="Login" placeholder="Type your login" required oninvalid="this.setCustomValidity('Please type login.')" oninput="this.setCustomValidity('')"/>
                @Html.ValidationMessageFor(x => x.Login)
            </div>
            <div class="text-center">
                <label class="form-label">Email</label>
                <input type="text" class="form-control text-center" asp-for="Email" placeholder="Type your login" required oninvalid="this.setCustomValidity('Please type your email.')" oninput="this.setCustomValidity('')"/>
                @Html.ValidationMessageFor(x => x.Email)
            </div>
            <br/>
            <button type="submit" class="btn btn-primary text-center">Confirm</button>
            <a class="btn btn-secondary" asp-controller="Login" asp-action="Index">Back</a>
        </form>
        </div>
    </div>
</div>
